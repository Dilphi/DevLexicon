import flet as ft
import sqlite3

def main(page: ft.Page):
    page.title = "DevLexicon"
    page.theme_mode = "dark"
    page.window.width = 350
    page.window.height = 400
    page.window.resizable = False
    page.vertical_alignment = ft.MainAxisAlignment.CENTER

    def validate(e):
        if all([student_name.value, student_surname.value, student_group.value]):
            btn_reg.disabled = False
        
        elif student_name.value == "–ê–¥–æ–ª—å—Ñ":
            btn_reg.text = "–ê —Ç—ã —à—É—Ç–Ω–∏–∫"
            btn_reg.disabled = False

        else:
            btn_reg.disabled = True
        page.update()

    def register(e):
        db = sqlite3.connect('students.mab')

        cur = db.cursor()
        cur.execute("""
            CREATE TABLE IF NOT EXISTS students(
                id INTEGER PRIMARY KEY,
                name TEXT,
                surname TEXT,
                group_name TEXT
            )
        """)
        cur.execute("INSERT INTO students (name, surname, group_name) VALUES (?, ?, ?)", 
            (student_name.value, student_surname.value, student_group.value))

        db.commit()
        db.close()

        student_name.value = ''
        student_surname.value = ''
        student_group.value = ''

        page.update()

    def auth_student(e):
        db = sqlite3.connect('students.mab')

        cur = db.cursor()
        cur.execute("SELECT * FROM students WHERE name = ? AND surname = ? AND group_name = ?", 
                (student_name.value, student_surname.value, student_group.value))
        if cur.fetchone() != None:
            student_name.value = ''
            student_surname.value = ''
            student_group.value = ''
            
            if len(page.navigation_bar.destinations) == 2:
                page.navigation_bar.destinations.append(ft.NavigationBarDestination(
                    icon = ft.Icons.BOOK,
                    selected_icon = ft.Icons.BOOKMARK
                ))

            page.update()
        else:
            page.snack_bar = ft.SnackBar(ft.Text('–£–≤—ã, –Ω–æ —Ç–∞–∫–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ—Ç'))
            page.snack_bar.open = True
            page.update()
        db.commit()
        db.close()

    def change_theme(e):
        page.theme_mode = "light" if page.theme_mode == "dark" else "dark"
        page.update()
    
    
    def show_language_info(language, description):
        page.clean()
        page.add(
            ft.Column(
                [
                    ft.Text(language, size=20, weight=ft.FontWeight.BOLD),
                    ft.Container(
                        content=ft.ListView(
                            controls=[ft.Text(description, selectable=True)],  
                            auto_scroll=False,  # –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ-–ø—Ä–æ–∫—Ä—É—Ç–∫—É
                            expand=True  
                        ),
                        expand=True  
                    ),
                    ft.OutlinedButton("–ù–∞–∑–∞–¥", on_click=lambda e: navigate(None))
                ],
                expand=True,  
                alignment=ft.MainAxisAlignment.CENTER
            )
        )
        page.update()

    
    languages = {
        "JavaScript": """JavaScript ‚Äî —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–∞—Ö.
        JavaScript –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–∞–π—Ç—ã –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –î–ª—è –≤–≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è alert(), –∞ –¥–ª—è –≤–≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å console.log().–ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
        // –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        alert("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.");

        // –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
        console.log("–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –ø–æ—è–≤–∏–ª—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏");

        –í JavaScript –µ—Å—Ç—å —Ç—Ä–∏ —Å–ø–æ—Å–æ–±–∞ –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é:
        var ‚Äî —É—Å—Ç–∞—Ä–µ–≤—à–∏–π, –Ω–æ –≤—Å—ë –µ—â—ë —Ä–∞–±–æ—Ç–∞—é—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç.
        let ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±.
        const ‚Äî –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–∑–º–µ–Ω—è—é—Ç—Å—è.
        
        1. var ‚Äî —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.
        üîπ var —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞ JavaScript –∏ –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ—ç—Ç–æ–º—É –µ–≥–æ –∑–∞–º–µ–Ω–∏–ª–∏ –Ω–∞ let –∏ const.

        –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ var:
        ‚úÖ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ.
        ‚úÖ –ú–æ–∂–Ω–æ –æ–±—ä—è–≤–ª—è—Ç—å –∑–∞–Ω–æ–≤–æ (–¥–∞–∂–µ –≤ –æ–¥–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏).
        ‚ö† –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ–∑–¥–∞—ë—Ç—Å—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏–∏.
        ‚ö† –ü–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è (hoisting) –≤ –Ω–∞—á–∞–ª–æ –∫–æ–¥–∞, –Ω–æ –±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
        ‚ö† –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –±–ª–æ–∫–∏ {}, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—à–∏–±–∫–∞–º.
        
        var name = "–ò–≤–∞–Ω";
        console.log(name); // –ò–≤–∞–Ω

        var name = "–ê–Ω–Ω–∞"; // –ú–æ–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        console.log(name); // –ê–Ω–Ω–∞

        if (true) {
            var age = 25; // –û–±—ä—è–≤–ª–µ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞, –Ω–æ –¥–æ—Å—Ç—É–ø–Ω–∞ –í–ù–ï –µ–≥–æ
        }
        console.log(age); // 25 (–∏–∑-–∑–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –±–ª–æ–∫–∞)

        2. let ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        üîπ –í–≤–µ–¥—ë–Ω –≤ ES6 (2015) –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã var.
        –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ let:
        ‚úÖ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ.
        üö´ –ù–µ–ª—å–∑—è –æ–±—ä—è–≤–ª—è—Ç—å –∑–∞–Ω–æ–≤–æ –≤ –æ–¥–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏.
        ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Å–≤–æ—ë–º –±–ª–æ–∫–µ {}.
        ‚úÖ –ü–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è (hoisting), –Ω–æ –±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.

        let city = "–ú–æ—Å–∫–≤–∞";
        console.log(city); // –ú–æ—Å–∫–≤–∞

        city = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"; // –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
        console.log(city); // –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥

        if (true) {
            let country = "–†–æ—Å—Å–∏—è"; 
            console.log(country); // –†–æ—Å—Å–∏—è (–≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞)
        }
        console.log(country); // –û–®–ò–ë–ö–ê! (country —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ if)

        3. const ‚Äî –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        üîπ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –∏–∑–º–µ–Ω—è—Ç—å—Å—è.
        –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ const:
        üö´ –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.
        üö´ –ù–µ–ª—å–∑—è –æ–±—ä—è–≤–ª—è—Ç—å –∑–∞–Ω–æ–≤–æ –≤ –æ–¥–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏.
        ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Å–≤–æ—ë–º –±–ª–æ–∫–µ {}.
        ‚úÖ –ü–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è (hoisting), –Ω–æ –±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.

        const pi = 3.14;
        console.log(pi); // 3.14

        pi = 3.1415; // –û–®–ò–ë–ö–ê! (–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ)

        –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á—Ç–æ?

        –ò—Å–ø–æ–ª—å–∑—É–π const, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å—Å—è.
        –ò—Å–ø–æ–ª—å–∑—É–π let, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è.
        –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π var –≤ –Ω–æ–≤–æ–º –∫–æ–¥–µ!""",
        "C#": "C# ‚Äî —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç Microsoft, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–≥—Ä –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.",
        "C++": "C++ ‚Äî –º–æ—â–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏–≥—Ä –∏ –ü–û.",
        "Python": "Python ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —É–¥–æ–±–Ω—ã–π –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö.",
        "SQL": "SQL ‚Äî —è–∑—ã–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö."
    }
    student_name = ft.TextField(label="–ò–º—è", width=150, on_change=validate)
    student_surname = ft.TextField(label="–§–∞–º–∏–ª–∏—è", width=150, on_change=validate)
    student_group = ft.TextField(label="–ì—Ä—É–ø–ø–∞", width=100, on_change=validate)
    
    btn_reg = ft.OutlinedButton(text="–î–æ–±–∞–≤–∏—Ç—å", width=200, on_click=register, disabled=True)
    btn_auth = ft.OutlinedButton(text="–í–æ–π—Ç–∏", on_click=auth_student)


    # –°–æ–∑–¥–∞–µ–º row –¥–ª—è —Ç–µ–º—ã
    theme = ft.Row(
        [
            ft.IconButton(ft.Icons.SUNNY, on_click=change_theme)
        ]
    )

    # –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
    panel_register = ft.Row(
        [
            ft.Column(
                [
                    theme
                ]
            ),
            ft.Column(
                [
                    ft.Text("–ù—É –ø—Ä–∏–≤–µ—Ç"),
                    student_name,
                    student_surname,
                    student_group,
                    btn_reg
                ],
                alignment=ft.MainAxisAlignment.CENTER
            )
        ],
        alignment=ft.MainAxisAlignment.CENTER
    )

    panel_auth =  ft.Row(
        [   
             
            ft.Column(
                [
                    theme
                ]
            ),
            ft.Column(
                [
                    ft.Text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å"),
                    student_name,
                    student_surname,
                    student_group,
                    btn_auth
                ]
            )
        ],
        alignment=ft.MainAxisAlignment.CENTER
    )

    panel_app = ft.Column(
        [
            theme,
            ft.Text("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è"),
            ft.ListView(
                controls=[
                    ft.OutlinedButton(text=lang, on_click=lambda e, l=lang: show_language_info(l, languages[l])) for lang in languages.keys()
                ],
                expand=True
            ),
            ft.OutlinedButton(text="–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")
        ],
        alignment=ft.MainAxisAlignment.CENTER
    )

    def navigate(e):
        select_index = page.navigation_bar.selected_index
        page.clean()

        if select_index == 0:
            page.add(panel_register)
        elif select_index == 1:
            page.add(panel_auth)
        elif select_index == 2:
            page.add(panel_app)
        
        page.update()

    page.navigation_bar = ft.NavigationBar(
        destinations=[
            ft.NavigationBarDestination(icon=ft.Icons.VERIFIED_USER),
            ft.NavigationBarDestination(icon=ft.Icons.VERIFIED_USER_OUTLINED),
        ],
        on_change=navigate
    )

    page.add(panel_register)

ft.app(target=main)